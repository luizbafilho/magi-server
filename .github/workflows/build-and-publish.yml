name: Build and Publish Docker Image

on:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get next version
        id: get_next_version
        run: |
          # Get existing package versions using GitHub API
          PACKAGE_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          VERSIONS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/orgs/${{ github.repository_owner }}/packages/container/$PACKAGE_NAME/versions" \
            | grep -o '"metadata":{.*"container":{.*"tags":\["v[0-9]*"' \
            | grep -o 'v[0-9]*' \
            | sort -V)

          # Find the highest version number
          HIGHEST_VERSION=0
          for VERSION in $VERSIONS; do
            NUMBER=${VERSION#v}
            if [ "$NUMBER" -gt "$HIGHEST_VERSION" ]; then
              HIGHEST_VERSION=$NUMBER
            fi
          done

          # Increment version
          NEXT_VERSION=$((HIGHEST_VERSION + 1))
          echo "Using version: v$NEXT_VERSION"
          echo "new_version=v$NEXT_VERSION" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_next_version.outputs.new_version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max